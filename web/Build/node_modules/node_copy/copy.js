!function (factory) {
    if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {
        var target = module['exports'] || exports;
        factory(target);
    } else if (typeof define === 'function' && define['amd']) {
        define(['exports'], factory);
    } else {
        factory(window['NC'] = {});
    }
}(function (exports) {
    var nc = typeof exports !== 'undefined' ? exports : {};
    var child_process = require('child_process');
    var os = require('os');
    var path = require('path');
    var iconv = require('iconv-lite');
    //调用执行文件
    //console.log('开始');

    /**
     * windows 环境调用bat文件拷贝文件，解决文件过多不能拷贝的问题
     * @param soure
     * @param dir
     * @param info
     */
    var copy_windows = function (soure, dir, info) {
        //console.log("go>>>>>>" + process.cwd() + '\\Build\\node_copy\\copy.bat' + "<<<<<<");
        var cmd_path = path.normalize(process.cwd() + '\\Build\\node_modules\\node_copy\\copy.bat');

        var ls = child_process.spawn(cmd_path, [ dir, soure]);

        ls.stdout.on('data', function (data) {
            // console.log('stdout: ' + data);
        });

        ls.stderr.on('data', function (data) {
            console.log('stderr: ' + data);
            var ss = iconv.decode(data, 'utf-8');
            console.log(ss);
        });

        ls.on('close', function (code) {
            //console.log('child process exited with code ' + code);
            if (code == 0) {
                console.log('\x1B[41m%s\x1B[49m',info + ':静态文件拷贝完成！！！');
            }
        });

    }

    /**
     * linux 环境调用shell 命令拷贝文件
     * 此方法废弃，不调用，linux 环境继续使用之前的方式
     * @param soure
     * @param dir
     * @param info
     */
    var copy_linux = function (soure, dir, info) {
        //var cmd_path = path.join(process.cwd(), 'copy.sh');
        var cmd_path = path.normalize(process.cwd() + '/node_modules/node_copy/copy.sh');
        console.log("go>>>>>>" + cmd_path + "<<<<<<");
        console.log("sourePath:" + soure);
        console.log("dirPath:" + dir);
        var ls = child_process.spawn(cmd_path, [soure, dir]);

        ls.stdout.on('data', function (data) {
            console.log('stdout: ' + data);
        });

        ls.stderr.on('data', function (data) {
            console.log('stderr: ' + data);

        });

        ls.on('close', function (code) {
            //console.log('child process exited with code ' + code);
            if (code == 0) {
                console.log('\x1B[41m%s\x1B[49m',info + ':静态文件拷贝完成！！！');
            }
        });
    }

    function copy(soure, dir, info) {
        soure = path.normalize(soure);
        dir = path.normalize(dir);
        if (os.type() == "Linux") {
            copy_linux(soure, dir, info);
        } else {
            copy_windows(soure, dir, info);
        }
    }

    nc.copy = copy;
});



