<?xml version="1.0" encoding="UTF-8"?>
<!--
~ Copyright (c) 2011-2012 www.iflytek.com. All Rights Reserved.
~  This software for customer relationship management system, developed by Noo team.
~  Software code and design for the team, copy rights reserved.
-->

<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
"http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--

CheckStyle 的执行基于XML配置文件，它的主要组成部分是：
Module：整个配置文件就是一颗Module树。根节点是Checker Module。
Properties：它决定了一个Module如何进行检查。每个Module都有一个默认值，如果不满足开发需求，可以设定其它的值。

-->

<module name="Checker">
	<!-- 检查级别 -->
	<property name="severity" value="error"/>
	<!--
	If you set the basedir property below, then all reported file
	names will be relative to the specified directory. See
	http://checkstyle.sourceforge.net/5.x/config.html#Checker

	<property name="basedir" value="${basedir}"/>
	-->

	<!-- 检查每个Java Package中是否有java注释文件，默认是允许一个package-info.java,也可以通过allowLegacy属性配置允许package.html -->
	<!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage       -->
	<!-- <module name="JavadocPackage">
	<property name="allowLegacy" value="true"/>
	</module> -->
	<!-- Checks that property files contain the same keys.         -->
	<!-- 检查属性文件中是否包含相同的KEY -->
	<!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
	<module name="Translation"/>

	<!-- 检查文件的长度 default max=2000 可以设置max来控制大小-->
	<module name="FileLength"/>

	<!-- Following interprets the header file as regular expressions. -->
	<!-- <module name="RegexpHeader"/>                                -->
	<!-- 检查文件中是否含有'\t' -->
	<!--  <module name="FileTabCharacter">
	<property name="eachLine" value="true"/>
	</module> -->

	<!-- <module name="RegexpSingleline"> -->
	<!-- \s matches whitespace character, $ matches end of line. -->
	<!-- <property name="format" value="\s+$"/> -->
	<!-- <property name="message" value="Line has trailing spaces."/> -->
	<!-- </module> -->
	
	<module name="TreeWalker">
		<!--
		<property name="cacheFile" value="${checkstyle.cache.file}"/> -->

		<!-- Checks for Javadoc comments.                     -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<!-- 检查所有方法的javadoc，可以不声明RuntimeException -->
		<module name="JavadocMethod">
			<property name="allowUndeclaredRTE" value="true"/>
		</module>
		<!-- 检查类和接口的javadoc -->
		<module name="JavadocType"/>
		<!-- 检查某个变量的javadoc -->
		<module name="JavadocVariable"/>
		<!-- 检查JavaDoc注释 -->
		<!--<module name="JavadocStyle"/>-->

		<!-- Checks for Naming Conventions.                  -->
		<!-- 检查命名约定 -->
		<!-- See http://checkstyle.sf.net/config_naming.html -->
		<!-- 常量名的检查 -->
		<module name="ConstantName"/>
		<!-- 检查局部的final变量，包括catch中的参数 -->
		<module name="LocalFinalVariableName"/>
		<!-- 检查局部的非final型的变量，包括catch中的参数 -->
		<module name="LocalVariableName"/>
		<!-- 变量的检查 -->
		<module name="MemberName"/>
		<!-- 方法名的检查 -->
		<module name="MethodName"/>
		<!-- 检查包名 -->
		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
			<message key="name.invalidPattern" value="包名 ''{0}''要匹配 ''{1}''的格式（所有字母全部小写）."/>
		</module>
		<!-- 方法的参数名 -->
		<module name="ParameterName">
			<message key="name.invalidPattern" value="变量 ''{0}''要匹配''{1}''的格式，建议除首单词外的每个单词的首字母大写."/>
		</module>
		<!-- 检查仅仅是static型的变量（不包括static final型） -->
		<module name="StaticVariableName"/>
		<!-- 命名方面的检查，它们都使用了Checkstyle默认的规则。 -->
		<!-- 类名(class 或interface) 的检查 -->
		<module name="TypeName">
			<message key="name.invalidPattern" value="名字 ''{0}'' 要符合 ''{1}''的格式（建议每个单词的首字母大写）."/>
		</module>
		<!-- 检查 抽象类 -->
		<module name="AbstractClassName"/>

		<!-- Checks for Headers                                -->
		<!-- See http://checkstyle.sf.net/config_header.html   -->
		<!-- <module name="Header">                            -->
		<!-- The follow property value demonstrates the ability     -->
		<!-- to have access to ANT properties. In this case it uses -->
		<!-- the ${basedir} property to allow Checkstyle to be run  -->
		<!-- from any directory within a project. See property      -->
		<!-- expansion,                                             -->
		<!-- http://checkstyle.sf.net/config.html#properties        -->
		<!-- <property                                              -->
		<!--     name="headerFile"                                  -->
		<!--     value="${basedir}/java.header"/>                   -->
		<!-- </module> -->

		<!-- Checks for imports                              -->
		<!-- See http://checkstyle.sf.net/config_import.html -->
		<!-- 必须导入类的完整路径，即不能使用*导入所需的类 -->
		<module name="AvoidStarImport"/>
		<!-- 检查是否从非法的包中导入了类 illegalPkgs: 定义非法的包名称-->
		<module name="IllegalImport"/>
		<!-- defaults to sun.* packages -->
		<!-- 检查是否导入了不必显示导入的类-->
		<module name="RedundantImport"/>
		<!-- 检查没用的import -->
		<module name="UnusedImports"/>

		<!-- Checks for Size Violations.                    -->
		<!-- See http://checkstyle.sf.net/config_sizes.html -->
		<!-- 每行不超过300个字-->
		<!--<module name="LineLength">
			<property name="max" value="300"/>
		</module>-->
		<!-- 方法不超过80行 -->
		<module name="MethodLength">
			<property name="max" value="80"/>
			<property name="tokens" value="METHOD_DEF"/>
			<property name="countEmpty" value="false"/>
		</module>
		<!-- 方法的参数个数不超过8个。 -->
		<module name="ParameterNumber">
			<property name="max" value="20"/>
		</module>

		<!-- Checks for common coding problems               -->
		<!-- See http://checkstyle.sf.net/config_coding.html -->
		<!-- 检查inline的条件操作 -->
		<!--    <module name="AvoidInlineConditionals">
		<message key="inline.conditional.avoid" value="避免在此处嵌入条件"/>
		</module> -->
		<!-- 检查DCL的问题 
		<module name="DoubleCheckedLocking"/>-->
		<!-- MY FAVOURITE -->
		<!-- 检查空的代码块 -->
		<module name="EmptyStatement"/>
		<!-- 不许内部赋值 -->
		<module name="InnerAssignment"/>
		<!-- 循环控制变量不能被修改 -->
		<module name="ModifiedControlVariable"/>
		<!-- 不能用魔法数 
		<module name="MagicNumber"/>-->

		<!-- 多余的throw -->
		<!--<module name="RedundantThrows"/>-->

		<!-- 检查未被简化的boolean返回语句 -->
		<module name="SimplifyBooleanReturn"/>
		<!-- String的比较不能用!= 和 == -->
		<module name="StringLiteralEquality"/>

		<!-- 捕获 java.lang.Exception , java.lang.Error, java.lang.RuntimeError 是不合理的。 -->
		<!--<module name="IllegalCatch">
			<property name="illegalClassNames" value="java.lang.Error,java.lang.RuntimeError"/>
		</module>-->
		<!-- 限制一个方法中return语句的数量。 -->
		<!--<module name="ReturnCount">
			<property name="max" value="4"/>
		</module>-->

		<!-- 禁止对参数赋值 -->
		<module name="ParameterAssignment"/>
		<!-- 确保一个文件中的同样内容的字符串不出现多次，最多出现2次 
		<module name="MultipleStringLiterals">
			<property name="allowedDuplicates" value="2"/>
		</module>-->
		<!-- 同一行禁止声明多个变量 -->
		<module name="MultipleVariableDeclarations"/>
		<!-- 最多4个throws -->
		<module name="ThrowsCount">
			<property name="max" value="4"/>
		</module>
		<!-- 不许使用与代码同行的注释 -->
		<module name="TrailingComment"/>
	</module>

</module>
